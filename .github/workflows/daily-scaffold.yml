name: Daily scaffold

on:
  workflow_dispatch:
    inputs:
      date:
        description: 'YYYY-MM-DD (optional). If empty, uses TODAY in Pacific Time.'
        required: false
  # schedule:
  #   - cron: '5 8 * * *' # Every day at 08:05 UTC (00:05 PT in winter, ~01:05 PT in summer)
  # Automatic daily scheduling disabled. Use manual trigger above to create daily folders.

# Prevent two runs from editing "main" at the same time
concurrency:
  group: daily-scaffold-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  scaffold:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: true
          ref: main
          fetch-depth: 0

      - name: Ensure local main is up to date
        run: |
          set -euo pipefail
          git fetch origin main
          # Make sure we're on a branch, not a detached HEAD
          git checkout -B main origin/main
          # Now main tracks the latest remote state
          git reset --hard origin/main

      - name: Compute date (Pacific Time)
        id: date
        run: |
          if [ -n "${{ github.event.inputs.date }}" ]; then
            echo "today=${{ github.event.inputs.date }}" >> "$GITHUB_OUTPUT"
          else
            export TZ=America/Los_Angeles
            echo "today=$(date +%F)" >> "$GITHUB_OUTPUT"
          fi

      - name: Create daily folder from templates
        run: |
          set -euo pipefail
          TODAY="${{ steps.date.outputs.today }}"
          DEST="daily/$TODAY"
          if [ -d "$DEST" ]; then
            echo "Folder $DEST already exists. Nothing to do."
            exit 0
          fi
          mkdir -p "$DEST"
          cp templates/daily/*.md "$DEST"/
          # Replace placeholders
          for f in "$DEST"/*.md; do
            sed -i 's/{{DATE}}/'"$TODAY"'/g' "$f"
          done

      - name: Commit and push (with retry)
        run: |
          set -euo pipefail
          TODAY="${{ steps.date.outputs.today }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage and commit only if there are changes
          git add "daily/$TODAY" || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(daily): scaffold $TODAY"

          # Try up to 3 times in case another push lands while we run
          for i in 1 2 3; do
            # Get the very latest main
            git fetch origin main
            # Rebase our commit(s) on top of the newest main
            git rebase origin/main || { echo "Rebase conflict. Aborting."; git rebase --abort; exit 1; }
            # Push our current HEAD to the main branch
            if git push origin HEAD:main; then
              echo "Push succeeded."
              break
            fi
            echo "Push was rejected (likely a race). Retrying in $((i*2))s..."
            sleep $((i*2))
          done
